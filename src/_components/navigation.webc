<header data-navigation class="section fixed top-0 left-0 h-56 z-50" webc:root="override">
    <div data-navigation-bg class="absolute top-0 left-0 w-full h-full bg-background/95 backdrop-blur-md border-b border-headline/4"></div>
    <container class="flex items-center justify-between">
        <!--- Skip link --->
        <link-btn href="#main" class="absolute z-10 top-36 -ml-6 size-3xs opacity-0 pointer-events-none focus-visible:opacity-100 focus-visible:pointer-events-auto">
            Skip to content
        </link-btn>
        <!--- Logo --->
        <div class="relative flex items-center mr-4 -mt-1">
            <a href="/" title="Getrich homepage" class="flex items-center h-36 px-8 -ml-8 shrink-0 button-focus">
                <wordmark class="w-72 h-auto"></wordmark>
            </a>
        </div>
        <!--- Mobile CTAs --->
        <div class="relative flex sm:hidden items-center gap-4">
            <link-btn href="#" class="size-sm variant-ghost theme">
                Docs
            </link-btn>
            <link-btn href="#" class="size-sm variant-primary">
                Get started
                <chevronright slot="right"></chevronright>
            </link-btn>
            <div class="relative ml-4 -mr-10 flex items-center justify-center sm:hidden">
                <div data-navigation-icon class="flex flex-col gap-4 items-center justify-center w-36 h-36">
                    <div class="w-16 h-2 bg-current origin-center"></div>
                    <div class="w-16 h-2 bg-current origin-center"></div>
                </div>
                <input data-toggle-navigation type="checkbox" name="Toggle navigation menu" aria-label="Toggle navigation menu" class="absolute flex items-center justify-center w-full h-full opacity-0 cursor-pointer">
            </div>
        </div>
        <!--- Navigation --->
        <div data-navigation-contents class="absolute right-0 top-48 -mt-2 h-dvh-56 sm:h-auto sm:right-auto sm:top-auto sm:mt-0 sm:relative w-full flex justify-start bg-background sm:bg-transparent">
            <nav class="relative w-full sm:w-auto h-dvh-112 sm:h-auto overflow-y-scroll sm:overflow-y-visible">
                <tab-group class="relative w-full" tab="bg-headline/6 rounded-5 hidden">
                    <ul class="relative w-full flex flex-col sm:flex-row sm:items-center">
                        <li webc:for="item of navigation">
                            <!--- Dropdown --->
                            <details data-hoverdown webc:if="item.header === true && item.items">
                                <summary class="button size-md variant-nav theme">
                                    <span @text="item.label"></span>
                                    <chevrondown data-chevron></chevrondown>
                                </summary>
                                <div data-content class="relative sm:absolute sm:-mt-1 overflow-hidden sm:overflow-visible sm:origin-top-left">
                                    <ul class="relative flex flex-col min-w-160 sm:mt-8 bg-middleground sm:border border-headline/10 sm:rounded-6 sm:shadow-xl sm:p-2 variant-nav-item-list">
                                        <li webc:for="subitem of item.items" class="relative w-full">
                                            <a :href="subitem.href" class="button variant-nav-item">
                                                <p class="variant-nav-item-label" @text="subitem.label"></p>
                                                <chevronright></chevronright>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </details>
                            <!--- Non-dropdown --->
                            <link-btn data-tab :href="item.href" class="size-md variant-nav theme" webc:if="item.header === true && !item.items">
                                <span @text="item.label"></span>
                            </link-btn>
                        </li>
                    </ul>
                </tab-group>
            </nav>
            <div class="absolute bottom-0 left-0 flex sm:hidden items-center justify-between h-56 w-full border-t border-headline/10 px-24">
                <div class="flex items-center -ml-12">
                    <link-btn href="#" class="size-sm variant-ghost theme">
                        Sign in
                        <chevronright slot="right"></chevronright>
                    </link-btn>
                </div>
                <div class="flex items-center -ml-12">
                    <link-btn href="#" class="size-sm variant-ghost theme">
                        Contact
                    </link-btn>
                </div>
            </div>
        </div>
        <!-- Desktop CTAs -->
        <div class="hidden sm:flex items-center gap-12">
            <!--- Toggle scheme --->
            <div data-toggle-scheme class="relative flex items-center justify-center border border-headline/8 bg-headline/4 rounded-16 px-2">
                <div data-toggle-knob class="absolute w-20 h-20 border bg-headline/6 border-headline/20 rounded-full left-2"></div>
                <div data-toggle-light class="relative flex items-center justify-center w-20 h-24">
                    <sun class="w-12 h-auto"></sun>
                </div>
                <div data-toggle-dark class="relative flex items-center justify-center w-20 h-24">
                    <moon class="w-12 h-auto"></moon>
                </div>
                <input data-toggle-scheme-checkbox type="checkbox" name="Toggle dark/light mode" aria-label="Toggle dark/light mode" class="absolute flex items-center justify-center left-0 top-0 w-full h-full opacity-0 cursor-pointer">
            </div>
            <!--- Primary CTA --->
            <link-btn href="#" class="size-md variant-primary">
                Get started
                <chevronright slot="right"></chevronright>
            </link-btn>
        </div>
    </container>
</header>

<!--- 

    CSS: For nav related stuff lives in assets/css/components/_navigation.css

--->

<!--- Javascript --->

<script>
    
    const sections = document.querySelectorAll('section');
    const navigation =  document.querySelector('[data-navigation]');
    const navigationBg =  document.querySelector('[data-navigation-bg]');
    const hoverdowns = document.querySelectorAll('[data-hoverdown]');
    const toggleScheme = document.querySelector('[data-toggle-scheme-checkbox]');

    function hoverdown(el) {
        const content = el.querySelector('[data-content]');
        const icon = el.querySelector('[data-chevron]');

        function open(targetEl, desktop = true) {
            const targetContent = targetEl.querySelector('[data-content]');
            const tmln = gsap.timeline({});
            targetEl.open = true;
            if (desktop) { tmln.from(targetContent, { overwrite: true, opacity: 0, scale: 0.5, duration: 0.4, ease: 'power3.out' }); }
            else { tmln.from(targetContent, { overwrite: true, opacity: 0, height: 0, duration: 0.4, ease: 'power3.out' }); }
            tmln.set(targetContent, { clearProps: 'all' });
        }

        function close(targetEl, desktop = true) {
            const targetContent = targetEl.querySelector('[data-content]');
            const targetIcon = targetEl.querySelector('[data-chevron]');
            const tmln = gsap.timeline({});
            if (desktop) { tmln.to(targetContent, { scale: 0.8, opacity: 0, duration: 0.25, ease: 'power3.out' }); }
            else { tmln.to(targetContent, { height: 0, opacity: 0, duration: 0.4, ease: 'power3.out' }); }
            tmln.to(targetIcon, { rotationZ: 0, duration: 0.25, ease: 'power2.out' }, "-=0.25");
            tmln.call(() => { targetEl.open = false; })
                .set(targetContent, { clearProps: 'all' })
                .set(targetIcon, { clearProps: 'all' });
        }

        function closeInactive(currentEl) {
            hoverdowns.forEach((hoverdown) => {
                if (hoverdown !== currentEl && hoverdown.open) {
                    close(hoverdown, window.innerWidth >= 768);
                }
            });
        }

        function toggle(e) {
            e.preventDefault();
            const isDesktop = window.innerWidth >= 768;
            if (el.open) { close(el, isDesktop); }
            else { open(el, isDesktop); closeInactive(el); }
        }

        function hover() {
            if (window.innerWidth >= 768) {
                el.addEventListener('mouseenter', toggle);
                el.addEventListener('mouseleave', () => close(el, true));
            } else {
                el.removeEventListener('mouseenter', toggle);
                el.removeEventListener('mouseleave', () => close(el, true));
            }
        }

        function reset() {
            gsap.set(content, { clearProps: 'all' });
            gsap.set(icon, { clearProps: 'all' });
            el.open = false;
        }

        hover();
        el.addEventListener('click', toggle);
        window.addEventListener('resize', () => { reset(); hover(); });
    }

    hoverdowns.forEach(hoverdown);

    function setNavigationBg() {
        const firstSection = sections[0];
        const bgColor = window.getComputedStyle(firstSection).backgroundColor;
        const values = bgColor.replace(/rgba?\(|\)|\s/g, '').split(',');
        const tmln = gsap.timeline({});
        tmln.to(navigationBg, {backgroundColor: `rgba(${values[0]},${values[1]},${values[2]}, 0.95)`, duration: 0.25, ease: 'power1.out' });
    }

    function updateNavigationBg() {
        sections.forEach((section) => {
            function swapBg() {
                const bgColor = window.getComputedStyle(section).backgroundColor;
                const values = bgColor.replace(/rgba?\(|\)|\s/g, '').split(',');
                const tmln = gsap.timeline({});
                tmln.to(navigationBg, {backgroundColor: `rgba(${values[0]},${values[1]},${values[2]}, 0.95)`, duration: 0.25, ease: 'power1.out' });
            }
            const tmln = gsap.timeline({
                scrollTrigger: {
                    trigger: section,
                    start: 'top top',
                    end: 'bottom top',
                    onEnter: () => { swapBg(); },
                    onEnterBack: () => { swapBg(); },
                }
            });
        });
    }

    window.addEventListener('load', updateNavigationBg);

    toggleScheme.addEventListener('click', () => {
        if (toggleScheme.checked) {
            document.documentElement.setAttribute('color-scheme', 'dark');
            localStorage.scheme = 'dark';
            if(window.scrollY === 0) { setNavigationBg(); }
        } else {
            document.documentElement.setAttribute('color-scheme', 'light');
            localStorage.scheme = 'light';
            if(window.scrollY === 0) { setNavigationBg(); }
        }
        updateNavigationBg();
    });

</script>
