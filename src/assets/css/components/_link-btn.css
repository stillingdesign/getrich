.button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;
    height: 2.5rem;
    padding: 0 0.875rem;
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1;
    cursor: pointer;
    color: oklch(var(--color-theme)/1);
    background-color: oklch(var(--color-headline)/1);
    border-width: 0.0625rem;
    border-style: solid;
    border-color: transparent;
    border-radius: 0.375rem;
    transition: background-color 100ms linear 50ms, border-color 100ms linear 50ms, box-shadow 100ms linear 50ms, color 100ms linear 50ms;

    & > span {
        flex-shrink: 0;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        padding-bottom: 0.0625rem;
        white-space: nowrap;
    }

    & > svg {
        flex-shrink: 0;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 0.875rem;
        height: 0.875rem;
    }
    & > svg:first-child { margin-left: -0.25rem; }
    & > svg:last-child  { margin-right: -0.25rem; }

    @media (hover: hover) {
        &:hover {
            background-color: oklch(var(--color-headline)/0.8);
            box-shadow: 0 0.25rem 0.5rem 0 oklch(var(--black)/0.2), 0 0.125rem 0.25rem 0 oklch(var(--black)/0.2);
        }
    }
}

/* Sizes */

.button.size-3xs { font-size: 0.625rem;  height: 1.5rem;  padding: 0 0.4375rem; border-radius: 0.25rem;   gap: 0.125rem; }
.button.size-2xs { font-size: 0.6875rem; height: 1.75rem; padding: 0 0.5rem;    border-radius: 0.25rem;   gap: 0.125rem; }
.button.size-xs  { font-size: 0.75rem;   height: 2rem;    padding: 0 0.625rem;  border-radius: 0.3125rem; gap: 0.125rem;  }
.button.size-sm  { font-size: 0.8125rem; height: 2.25rem; padding: 0 0.75rem;   border-radius: 0.3125rem; gap: 0.1875rem; }
.button.size-lg  { font-size: 0.9375rem; height: 2.75rem; padding: 0 1rem;      border-radius: 0.4375rem;                 }
.button.size-xl  { font-size: 1rem;      height: 3rem;    padding: 0 1.125rem;  border-radius: 0.5rem;                    }

.button.size-3xs > span { padding-bottom: 0; }
.button.size-2xs > span { padding-bottom: 0; }
.button.size-xs  > span { padding-bottom: 0; }
.button.size-sm  > span { padding-bottom: 0; }

.button.size-3xs > svg { width: 0.75rem;   height: 0.75rem;   }
.button.size-2xs > svg { width: 0.75rem;   height: 0.75rem;   }
.button.size-xs > svg  { width: 0.75rem;   height: 0.75rem;   }
.button.size-sm > svg  { width: 0.8125rem; height: 0.8125rem; }
.button.size-lg > svg  { width: 0.9375rem; height: 0.9375rem; }
.button.size-xl > svg  { width: 1rem;      height: 1rem;      }

.button.size-3xs > svg:last-child { margin-right: 0; }
.button.size-2xs > svg:last-child { margin-right: 0; }
.button.size-xs > svg:last-child  { margin-right: -0.125rem; }
.button.size-sm > svg:last-child  { margin-right: -0.1875rem; }
.button.size-lg > svg:last-child  { margin-right: -0.3125rem; }
.button.size-xl > svg:last-child  { margin-right: -0.375rem;  }

.button.size-3xs > svg:first-child { margin-left: 0rem; }
.button.size-2xs > svg:first-child { margin-left: 0rem; }
.button.size-xs > svg:first-child  { margin-left: -0.125rem; }
.button.size-sm > svg:first-child  { margin-left: -0.1875rem; }
.button.size-lg > svg:first-child  { margin-left: -0.3125rem; }
.button.size-xl > svg:first-child  { margin-left: -0.375rem;  }

/* Variants */

.button.variant-primary {
    background-color: oklch(var(--color-primary)/1);
    color: oklch(var(--color-white)/1);
    border-color: oklch(var(--color-primary)/1);
    backdrop-filter: blur(4px);
    transform: translate3d(0,0,0);
    @media (hover: hover) {
        &:hover {
            background-color: oklch(var(--color-primary)/0.8);
            border-color: oklch(var(--color-primary)/0);
            box-shadow: 0 0.25rem 0.5rem 0 oklch(var(--black)/0.1), 0 0.125rem 0.25rem 0 oklch(var(--black)/0.1);
        }
    }
}

.button.variant-outline {
    background-color: oklch(var(--color-headline)/0.02);
    color: oklch(var(--color-headline)/1);
    border-color: oklch(var(--color-headline)/0.2);
    backdrop-filter: blur(4px);
    transform: translate3d(0,0,0);
    @media (hover: hover) {
        &:hover {
            background-color: oklch(var(--color-headline)/0.01);
            border-color: oklch(var(--color-headline)/0.3);
            box-shadow: 0 0.25rem 0.5rem 0 oklch(var(--black)/0.1), 0 0.125rem 0.25rem 0 oklch(var(--black)/0.1);
        }
    }
}

.button.variant-tab {
    background-color: transparent;
    color: oklch(var(--color-headline)/0.6);
    @media (hover: hover) {
        &:hover {
            background-color: transparent;
            box-shadow: none;
            color: oklch(var(--color-headline)/1);
        }
    }
}

.button.variant-ghost {
    background-color: transparent;
    backdrop-filter: blur(0);
    transform: translate3d(0,0,0);
    color: oklch(var(--color-headline)/0.6);
    @media (hover: hover) {
        &:hover {
            background-color: oklch(var(--color-headline)/0.06);
            backdrop-filter: blur(4px);
            box-shadow: none;
            color: oklch(var(--color-headline)/1);
        }
    }
}

/* Icon hover utilities */

@media (hover: hover) and (min-width: 768px)  {
    /* Icons */
    .button > .hover-left,
    .button > .hover-right { transition: transform 100ms linear 50ms }
    .button:hover  > .hover-left  { transform: translate3d(0.1875rem,0,0);  }
    .button.size-3xs:hover > .hover-left  { transform: translate3d(0.125rem,0,0);   }
    .button.size-2xs:hover > .hover-left  { transform: translate3d(0.125rem,0,0);   }
    .button.size-xs:hover  > .hover-left  { transform: translate3d(0.125rem,0,0);   }
    .button.size-sm:hover  > .hover-left  { transform: translate3d(0.1875rem,0,0);  }
    .button.size-md:hover  > .hover-left  { transform: translate3d(0.1875rem,0,0);  }
    .button.size-lg:hover  > .hover-left  { transform: translate3d(0.1875rem,0,0);  }
    .button.size-xl:hover  > .hover-left  { transform: translate3d(0.25rem,0,0);    }
    .button:hover  > .hover-right { transform: translate3d(-0.1875rem,0,0); }
    .button.size-3xs:hover > .hover-right { transform: translate3d(-0.125rem,0,0);  }
    .button.size-2xs:hover > .hover-right { transform: translate3d(-0.125rem,0,0);  }
    .button.size-xs:hover  > .hover-right { transform: translate3d(-0.125rem,0,0);  }
    .button.size-sm:hover  > .hover-right { transform: translate3d(-0.1875rem,0,0); }
    .button.size-md:hover  > .hover-right { transform: translate3d(-0.1875rem,0,0); }
    .button.size-lg:hover  > .hover-right { transform: translate3d(-0.1875rem,0,0); }
    .button.size-xl:hover  > .hover-right { transform: translate3d(-0.25rem,0,0);   }
    .button:hover > .hover-flip { transform: rotate3d(0,0,1,180deg); }
}

/* Details Utilities */
.button > .hover-flip  { transition: transform 100ms cubic-bezier(0,0.3,0.3,1) 0ms; }
details[open] > .button > .hover-flip { transform: rotate3d(0,0,1,180deg);   }

/* Focus utilities */

.button:focus-visible {
    outline: none !important;
    background-color: oklch(var(--color-primary)/1) !important;
    border-color: oklch(var(--color-primary)/1) !important;
    color: oklch(var(--color-white)/1) !important;
    box-shadow: 0 0 0 0.0625rem oklch(var(--color-background)/1), 0 0 0 0.125rem oklch(var(--color-primary)/1) !important;
}

.button-focus {
    border-width: 0.0625rem;
    border-style: solid;
    border-color: transparent;
}

.button-focus:focus-visible {
    outline:none;
    color: oklch(var(--color-white)/1);
    background-color: oklch(var(--color-primary)/1);
    border-radius: 0.375rem;
    box-shadow: 0 0 0 0.0625rem oklch(var(--color-background)/1), 0 0 0 0.125rem oklch(var(--color-primary)/1) !important;
}

/* Misc utilities */
details summary::-webkit-details-marker { display:none; }